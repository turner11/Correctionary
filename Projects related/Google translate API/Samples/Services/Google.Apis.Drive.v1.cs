//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Drive.v1.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    public class File : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _createdDate;
        
        private string _description;
        
        private string _downloadUrl;
        
        private string _etag;
        
        private string _fileExtension;
        
        private string _fileSize;
        
        private string _id;
        
        private File.IndexableTextData _indexableText;
        
        private string _kind;
        
        private File.LabelsData _labels;
        
        private string _lastViewedDate;
        
        private string _md5Checksum;
        
        private string _mimeType;
        
        private string _modifiedByMeDate;
        
        private string _modifiedDate;
        
        private System.Collections.Generic.IList<File.ParentsCollectionData> _parentsCollection;
        
        private string _selfLink;
        
        private string _title;
        
        private Permission _userPermission;
        
        private Google.Apis.Requests.RequestError _Error;
        
        /// <summary>Create time for this file (formatted ISO8601 timestamp).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createdDate")]
        public virtual string CreatedDate {
            get {
                return this._createdDate;
            }
            set {
                this._createdDate = value;
            }
        }
        
        /// <summary>A short description of the file</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>Short term download URL for the file. This will only be populated on files with content stored in Drive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("downloadUrl")]
        public virtual string DownloadUrl {
            get {
                return this._downloadUrl;
            }
            set {
                this._downloadUrl = value;
            }
        }
        
        /// <summary>ETag of the file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The file extension used when downloading this file. This field is read only. To set the extension, include it on title when creating the file. This will only be populated on files with content stored in Drive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fileExtension")]
        public virtual string FileExtension {
            get {
                return this._fileExtension;
            }
            set {
                this._fileExtension = value;
            }
        }
        
        /// <summary>The size of the file in bytes. This will only be populated on files with content stored in Drive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fileSize")]
        public virtual string FileSize {
            get {
                return this._fileSize;
            }
            set {
                this._fileSize = value;
            }
        }
        
        /// <summary>The id of the file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>Indexable text attributes for the file (can only be written)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("indexableText")]
        public virtual File.IndexableTextData IndexableText {
            get {
                return this._indexableText;
            }
            set {
                this._indexableText = value;
            }
        }
        
        /// <summary>The type of file. This is always drive#file</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Labels for the file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual File.LabelsData Labels {
            get {
                return this._labels;
            }
            set {
                this._labels = value;
            }
        }
        
        /// <summary>Last time this file was viewed by anyone (formatted RFC 3339 timestamp).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastViewedDate")]
        public virtual string LastViewedDate {
            get {
                return this._lastViewedDate;
            }
            set {
                this._lastViewedDate = value;
            }
        }
        
        /// <summary>An MD5 checksum for the content of this file. This will only be populated on files with content stored in Drive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("md5Checksum")]
        public virtual string Md5Checksum {
            get {
                return this._md5Checksum;
            }
            set {
                this._md5Checksum = value;
            }
        }
        
        /// <summary>The mimetype of the file</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mimeType")]
        public virtual string MimeType {
            get {
                return this._mimeType;
            }
            set {
                this._mimeType = value;
            }
        }
        
        /// <summary>Last time this file was modified by the user (formatted RFC 3339 timestamp).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modifiedByMeDate")]
        public virtual string ModifiedByMeDate {
            get {
                return this._modifiedByMeDate;
            }
            set {
                this._modifiedByMeDate = value;
            }
        }
        
        /// <summary>Last time this file was modified by anyone (formatted RFC 3339 timestamp).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modifiedDate")]
        public virtual string ModifiedDate {
            get {
                return this._modifiedDate;
            }
            set {
                this._modifiedDate = value;
            }
        }
        
        /// <summary>Collection of parent folders which contain this file.
        ///On insert, setting this field will put the file in all of the provided folders. If no folders are provided, the file will be placed in the default root folder. On update, this field is ignored.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parentsCollection")]
        public virtual System.Collections.Generic.IList<File.ParentsCollectionData> ParentsCollection {
            get {
                return this._parentsCollection;
            }
            set {
                this._parentsCollection = value;
            }
        }
        
        /// <summary>A link back to this file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink {
            get {
                return this._selfLink;
            }
            set {
                this._selfLink = value;
            }
        }
        
        /// <summary>The title of this file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("userPermission")]
        public virtual Permission UserPermission {
            get {
                return this._userPermission;
            }
            set {
                this._userPermission = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this._Error;
            }
            set {
                this._Error = value;
            }
        }
        
        /// <summary>Indexable text attributes for the file (can only be written)</summary>
        public class IndexableTextData {
            
            private string _text;
            
            /// <summary>The text to be indexed for this file</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("text")]
            public virtual string Text {
                get {
                    return this._text;
                }
                set {
                    this._text = value;
                }
            }
        }
        
        /// <summary>Labels for the file.</summary>
        public class LabelsData {
            
            private System.Nullable<bool> _hidden;
            
            private System.Nullable<bool> _starred;
            
            private System.Nullable<bool> _trashed;
            
            /// <summary>Whether this file is hidden from the user</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("hidden")]
            public virtual System.Nullable<bool> Hidden {
                get {
                    return this._hidden;
                }
                set {
                    this._hidden = value;
                }
            }
            
            /// <summary>Whether this file is starred by the user.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("starred")]
            public virtual System.Nullable<bool> Starred {
                get {
                    return this._starred;
                }
                set {
                    this._starred = value;
                }
            }
            
            /// <summary>Whether this file has been trashed.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("trashed")]
            public virtual System.Nullable<bool> Trashed {
                get {
                    return this._trashed;
                }
                set {
                    this._trashed = value;
                }
            }
        }
        
        public class ParentsCollectionData {
            
            private string _id;
            
            private string _parentLink;
            
            /// <summary>The id of this parent</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("id")]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>A link to get the metadata for this parent</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("parentLink")]
            public virtual string ParentLink {
                get {
                    return this._parentLink;
                }
                set {
                    this._parentLink = value;
                }
            }
        }
    }
    
    public class Permission {
        
        private System.Collections.Generic.IList<string> _additionalRoles;
        
        private string _etag;
        
        private string _kind;
        
        private string _role;
        
        private string _type;
        
        /// <summary>Any additional roles that this permission describes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalRoles")]
        public virtual System.Collections.Generic.IList<string> AdditionalRoles {
            get {
                return this._additionalRoles;
            }
            set {
                this._additionalRoles = value;
            }
        }
        
        /// <summary>An etag for this permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The kind of this permission. This is always drive#permission</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The role that this permission describes. (For example: reader, writer, owner)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("role")]
        public virtual string Role {
            get {
                return this._role;
            }
            set {
                this._role = value;
            }
        }
        
        /// <summary>The type of permission (For example: user, group etc).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type {
            get {
                return this._type;
            }
            set {
                this._type = value;
            }
        }
    }
}
namespace Google.Apis.Drive.v1 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class DriveService : Google.Apis.Discovery.IRequestProvider {
        
        private Google.Apis.Discovery.IService _service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string DiscoveryDocument = "{\"kind\":\"discovery#restDescription\",\"discoveryVersion\":\"v1\",\"id\":\"drive:v1\",\"name" +
            "\":\"drive\",\"version\":\"v1\",\"revision\":\"20120424\",\"title\":\"Drive API\",\"description\"" +
            ":\"The API to interact with Drive\",\"icons\":{\"x16\":\"http://www.google.com/images/i" +
            "cons/product/search-16.gif\",\"x32\":\"http://www.google.com/images/icons/product/se" +
            "arch-32.gif\"},\"documentationLink\":\"https://developers.google.com/drive/\",\"protoc" +
            "ol\":\"rest\",\"baseUrl\":\"https://www.googleapis.com/drive/v1/\",\"basePath\":\"/drive/v" +
            "1/\",\"rootUrl\":\"https://www.googleapis.com/\",\"servicePath\":\"drive/v1/\",\"batchPath" +
            "\":\"batch\",\"parameters\":{\"alt\":{\"type\":\"string\",\"description\":\"Data format for th" +
            "e response.\",\"default\":\"json\",\"enum\":[\"json\"],\"enumDescriptions\":[\"Responses wit" +
            "h Content-Type of application/json\"],\"location\":\"query\"},\"fields\":{\"type\":\"strin" +
            "g\",\"description\":\"Selector specifying which fields to include in a partial respo" +
            "nse.\",\"location\":\"query\"},\"key\":{\"type\":\"string\",\"description\":\"API key. Your AP" +
            "I key identifies your project and provides you with API access, quota, and repor" +
            "ts. Required unless you provide an OAuth 2.0 token.\",\"location\":\"query\"},\"oauth_" +
            "token\":{\"type\":\"string\",\"description\":\"OAuth 2.0 token for the current user.\",\"l" +
            "ocation\":\"query\"},\"prettyPrint\":{\"type\":\"boolean\",\"description\":\"Returns respons" +
            "e with indentations and line breaks.\",\"default\":\"true\",\"location\":\"query\"},\"quot" +
            "aUser\":{\"type\":\"string\",\"description\":\"Available to use for quota purposes for s" +
            "erver-side applications. Can be any arbitrary string assigned to a user, but sho" +
            "uld not exceed 40 characters. Overrides userIp if both are provided.\",\"location\"" +
            ":\"query\"},\"userIp\":{\"type\":\"string\",\"description\":\"IP address of the site where " +
            "the request originates. Use this if you want to enforce per-user limits.\",\"locat" +
            "ion\":\"query\"}},\"auth\":{\"oauth2\":{\"scopes\":{\"https://www.googleapis.com/auth/driv" +
            "e.file\":{\"description\":\"View and manage Google Drive files that you have opened " +
            "or created with this app\"}}}},\"schemas\":{\"File\":{\"id\":\"File\",\"type\":\"object\",\"pr" +
            "operties\":{\"createdDate\":{\"type\":\"string\",\"description\":\"Create time for this fi" +
            "le (formatted ISO8601 timestamp).\",\"format\":\"date-time\"},\"description\":{\"type\":\"" +
            "string\",\"description\":\"A short description of the file\"},\"downloadUrl\":{\"type\":\"" +
            "string\",\"description\":\"Short term download URL for the file. This will only be p" +
            "opulated on files with content stored in Drive.\"},\"etag\":{\"type\":\"string\",\"descr" +
            "iption\":\"ETag of the file.\"},\"fileExtension\":{\"type\":\"string\",\"description\":\"The" +
            " file extension used when downloading this file. This field is read only. To set" +
            " the extension, include it on title when creating the file. This will only be po" +
            "pulated on files with content stored in Drive.\"},\"fileSize\":{\"type\":\"string\",\"de" +
            "scription\":\"The size of the file in bytes. This will only be populated on files " +
            "with content stored in Drive.\",\"format\":\"int64\"},\"id\":{\"type\":\"string\",\"descript" +
            "ion\":\"The id of the file.\"},\"indexableText\":{\"type\":\"object\",\"description\":\"Inde" +
            "xable text attributes for the file (can only be written)\",\"properties\":{\"text\":{" +
            "\"type\":\"string\",\"description\":\"The text to be indexed for this file\"}}},\"kind\":{" +
            "\"type\":\"string\",\"description\":\"The type of file. This is always drive#file\",\"def" +
            "ault\":\"drive#file\"},\"labels\":{\"type\":\"object\",\"description\":\"Labels for the file" +
            ".\",\"properties\":{\"hidden\":{\"type\":\"boolean\",\"description\":\"Whether this file is " +
            "hidden from the user\"},\"starred\":{\"type\":\"boolean\",\"description\":\"Whether this f" +
            "ile is starred by the user.\"},\"trashed\":{\"type\":\"boolean\",\"description\":\"Whether" +
            " this file has been trashed.\"}}},\"lastViewedDate\":{\"type\":\"string\",\"description\"" +
            ":\"Last time this file was viewed by anyone (formatted RFC 3339 timestamp).\",\"for" +
            "mat\":\"date-time\"},\"md5Checksum\":{\"type\":\"string\",\"description\":\"An MD5 checksum " +
            "for the content of this file. This will only be populated on files with content " +
            "stored in Drive.\"},\"mimeType\":{\"type\":\"string\",\"description\":\"The mimetype of th" +
            "e file\"},\"modifiedByMeDate\":{\"type\":\"string\",\"description\":\"Last time this file " +
            "was modified by the user (formatted RFC 3339 timestamp).\",\"format\":\"date-time\"}," +
            "\"modifiedDate\":{\"type\":\"string\",\"description\":\"Last time this file was modified " +
            "by anyone (formatted RFC 3339 timestamp).\",\"format\":\"date-time\"},\"parentsCollect" +
            "ion\":{\"type\":\"array\",\"description\":\"Collection of parent folders which contain t" +
            "his file.\\nOn insert, setting this field will put the file in all of the provide" +
            "d folders. If no folders are provided, the file will be placed in the default ro" +
            "ot folder. On update, this field is ignored.\",\"items\":{\"type\":\"object\",\"properti" +
            "es\":{\"id\":{\"type\":\"string\",\"description\":\"The id of this parent\"},\"parentLink\":{" +
            "\"type\":\"string\",\"description\":\"A link to get the metadata for this parent\"}}}},\"" +
            "selfLink\":{\"type\":\"string\",\"description\":\"A link back to this file.\"},\"title\":{\"" +
            "type\":\"string\",\"description\":\"The title of this file.\"},\"userPermission\":{\"$ref\"" +
            ":\"Permission\",\"description\":\"The permissions for the authenticated user on this " +
            "file.\"}}},\"Permission\":{\"id\":\"Permission\",\"type\":\"object\",\"properties\":{\"additio" +
            "nalRoles\":{\"type\":\"array\",\"description\":\"Any additional roles that this permissi" +
            "on describes.\",\"items\":{\"type\":\"string\"}},\"etag\":{\"type\":\"string\",\"description\":" +
            "\"An etag for this permission.\"},\"kind\":{\"type\":\"string\",\"description\":\"The kind " +
            "of this permission. This is always drive#permission\",\"default\":\"drive#permission" +
            "\"},\"role\":{\"type\":\"string\",\"description\":\"The role that this permission describe" +
            "s. (For example: reader, writer, owner)\"},\"type\":{\"type\":\"string\",\"description\":" +
            "\"The type of permission (For example: user, group etc).\"}}}},\"resources\":{\"files" +
            "\":{\"methods\":{\"get\":{\"id\":\"drive.files.get\",\"path\":\"files/{id}\",\"httpMethod\":\"GE" +
            "T\",\"description\":\"Gets a file\'s metadata by id.\",\"parameters\":{\"id\":{\"type\":\"str" +
            "ing\",\"description\":\"The id for the file in question.\",\"required\":true,\"location\"" +
            ":\"path\"},\"projection\":{\"type\":\"string\",\"description\":\"Restrict information retur" +
            "ned for simplicity and optimization.\",\"enum\":[\"BASIC\",\"FULL\"],\"enumDescriptions\"" +
            ":[\"Includes only the basic metadata fields\",\"Includes all metadata fields\"],\"loc" +
            "ation\":\"query\"},\"updateViewedDate\":{\"type\":\"boolean\",\"description\":\"Whether to u" +
            "pdate the view date after successfully retrieving the file.\",\"default\":\"true\",\"l" +
            "ocation\":\"query\"}},\"parameterOrder\":[\"id\"],\"response\":{\"$ref\":\"File\"},\"scopes\":[" +
            "\"https://www.googleapis.com/auth/drive.file\"]},\"insert\":{\"id\":\"drive.files.inser" +
            "t\",\"path\":\"files\",\"httpMethod\":\"POST\",\"description\":\"Inserts a file, and any set" +
            "table metadata or blob content sent with the request.\",\"request\":{\"$ref\":\"File\"}" +
            ",\"response\":{\"$ref\":\"File\"},\"scopes\":[\"https://www.googleapis.com/auth/drive.fil" +
            "e\"],\"mediaUpload\":{\"accept\":[\"*/*\"],\"maxSize\":\"10GB\",\"protocols\":{\"simple\":{\"mul" +
            "tipart\":true,\"path\":\"/upload/drive/v1/files\"},\"resumable\":{\"multipart\":true,\"pat" +
            "h\":\"/resumable/upload/drive/v1/files\"}}}},\"patch\":{\"id\":\"drive.files.patch\",\"pat" +
            "h\":\"files/{id}\",\"httpMethod\":\"PATCH\",\"description\":\"Updates file metadata and/or" +
            " content. This method supports patch semantics.\",\"parameters\":{\"id\":{\"type\":\"str" +
            "ing\",\"description\":\"The id for the file in question.\",\"required\":true,\"location\"" +
            ":\"path\"},\"newRevision\":{\"type\":\"boolean\",\"description\":\"Whether a blob upload sh" +
            "ould create a new revision. If not set or false, the blob data in the current he" +
            "ad revision will be replaced.\",\"default\":\"true\",\"location\":\"query\"},\"updateModif" +
            "iedDate\":{\"type\":\"boolean\",\"description\":\"Controls updating the modified date of" +
            " the file. If true, the modified date will be updated to the current time, regar" +
            "dless of whether other changes are being made. If false, the modified date will " +
            "only be updated to the current time if other changes are also being made (changi" +
            "ng the title, for example).\",\"default\":\"false\",\"location\":\"query\"},\"updateViewed" +
            "Date\":{\"type\":\"boolean\",\"description\":\"Whether to update the view date after suc" +
            "cessfully updating the file.\",\"default\":\"true\",\"location\":\"query\"}},\"parameterOr" +
            "der\":[\"id\"],\"request\":{\"$ref\":\"File\"},\"response\":{\"$ref\":\"File\"},\"scopes\":[\"http" +
            "s://www.googleapis.com/auth/drive.file\"]},\"update\":{\"id\":\"drive.files.update\",\"p" +
            "ath\":\"files/{id}\",\"httpMethod\":\"PUT\",\"description\":\"Updates file metadata and/or" +
            " content\",\"parameters\":{\"id\":{\"type\":\"string\",\"description\":\"The id for the file" +
            " in question.\",\"required\":true,\"location\":\"path\"},\"newRevision\":{\"type\":\"boolean" +
            "\",\"description\":\"Whether a blob upload should create a new revision. If not set " +
            "or false, the blob data in the current head revision will be replaced.\",\"default" +
            "\":\"true\",\"location\":\"query\"},\"updateModifiedDate\":{\"type\":\"boolean\",\"description" +
            "\":\"Controls updating the modified date of the file. If true, the modified date w" +
            "ill be updated to the current time, regardless of whether other changes are bein" +
            "g made. If false, the modified date will only be updated to the current time if " +
            "other changes are also being made (changing the title, for example).\",\"default\":" +
            "\"false\",\"location\":\"query\"},\"updateViewedDate\":{\"type\":\"boolean\",\"description\":\"" +
            "Whether to update the view date after successfully updating the file.\",\"default\"" +
            ":\"true\",\"location\":\"query\"}},\"parameterOrder\":[\"id\"],\"request\":{\"$ref\":\"File\"},\"" +
            "response\":{\"$ref\":\"File\"},\"scopes\":[\"https://www.googleapis.com/auth/drive.file\"" +
            "],\"mediaUpload\":{\"accept\":[\"*/*\"],\"maxSize\":\"10GB\",\"protocols\":{\"simple\":{\"multi" +
            "part\":true,\"path\":\"/upload/drive/v1/files/{id}\"},\"resumable\":{\"multipart\":true,\"" +
            "path\":\"/resumable/upload/drive/v1/files/{id}\"}}}}}}}}";
        
        public const string Version = "v1";
        
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private string _Key;
        
        protected DriveService(Google.Apis.Discovery.IService _service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this._service = _service;
            this._authenticator = _authenticator;
            this._files = new FilesResource(this, _authenticator);
        }
        
        public DriveService() : 
                this(Google.Apis.Authentication.NullAuthenticator.Instance) {
        }
        
        public DriveService(Google.Apis.Authentication.IAuthenticator _authenticator) : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.StringDiscoveryDevice(DiscoveryDocument)).GetService(DriveService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameters(new System.Uri("https://www.googleapis.com/drive/v1/"))), _authenticator) {
        }
        
        public Google.Apis.Authentication.IAuthenticator Authenticator {
            get {
                return this._authenticator;
            }
        }
        
        public virtual string Name {
            get {
                return "drive";
            }
        }
        
        public virtual string BaseUri {
            get {
                return "https://www.googleapis.com/drive/v1/";
            }
        }
        
        /// <summary>Sets the API-Key (or DeveloperKey) which this service uses for all requests</summary>
        public virtual string Key {
            get {
                return this._Key;
            }
            set {
                this._Key = value;
            }
        }
        
        public virtual Google.Apis.Requests.IRequest CreateRequest(string resource, string method) {
            Google.Apis.Requests.IRequest request = this._service.CreateRequest(resource, method);
            if ((string.IsNullOrEmpty(Key) == false)) {
                request = request.WithKey(this.Key);
            }
            return request.WithAuthentication(_authenticator);
        }
        
        public virtual void RegisterSerializer(Google.Apis.ISerializer serializer) {
            _service.Serializer = serializer;
        }
        
        public virtual string SerializeObject(object obj) {
            return _service.SerializeRequest(obj);
        }
        
        public virtual T DeserializeResponse<T>(Google.Apis.Requests.IResponse response)
         {
            return _service.DeserializeResponse<T>(response);
        }
        
        /// <summary>A list of all OAuth2.0 scopes. Each of these scopes relates to a permission or group of permissions that different methods of this API may need.</summary>
        public enum Scopes {
            
            /// <summary>View and manage Google Drive files that you have opened or created with this app</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/drive.file")]
            DriveFile,
        }
    }
    
    public class FilesResource {
        
        private DriveService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "files";
        
        public FilesResource(DriveService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Gets a file&apos;s metadata by id.</summary>
        /// <param name="id">Required - The id for the file in question.</param>
        public virtual GetRequest Get(string id) {
            return new GetRequest(service, id);
        }
        
        /// <summary>Inserts a file, and any settable metadata or blob content sent with the request.</summary>
        public virtual InsertRequest Insert(Google.Apis.Drive.v1.Data.File body) {
            return new InsertRequest(service, body);
        }
        
        /// <summary>Updates file metadata and/or content. This method supports patch semantics.</summary>
        /// <param name="id">Required - The id for the file in question.</param>
        public virtual PatchRequest Patch(Google.Apis.Drive.v1.Data.File body, string id) {
            return new PatchRequest(service, body, id);
        }
        
        /// <summary>Updates file metadata and/or content</summary>
        /// <param name="id">Required - The id for the file in question.</param>
        public virtual UpdateRequest Update(Google.Apis.Drive.v1.Data.File body, string id) {
            return new UpdateRequest(service, body, id);
        }
        
        /// <summary>Restrict information returned for simplicity and optimization.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Projection {
            
            /// <summary>Includes only the basic metadata fields</summary>
            [Google.Apis.Util.StringValueAttribute("BASIC")]
            BASIC,
            
            /// <summary>Includes all metadata fields</summary>
            [Google.Apis.Util.StringValueAttribute("FULL")]
            FULL,
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Drive.v1.Data.File> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _quotaUser;
            
            private string _id;
            
            private System.Nullable<Projection> _projection;
            
            private System.Nullable<bool> _updateViewedDate;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string id) : 
                    base(service) {
                this._id = id;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser {
                get {
                    return this._quotaUser;
                }
                set {
                    this._quotaUser = value;
                }
            }
            
            /// <summary>The id for the file in question.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id {
                get {
                    return this._id;
                }
            }
            
            /// <summary>Restrict information returned for simplicity and optimization.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projection", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<Projection> Projection {
                get {
                    return this._projection;
                }
                set {
                    this._projection = value;
                }
            }
            
            /// <summary>Whether to update the view date after successfully retrieving the file.</summary>
            [Google.Apis.Util.RequestParameterAttribute("updateViewedDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> UpdateViewedDate {
                get {
                    return this._updateViewedDate;
                }
                set {
                    this._updateViewedDate = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "files";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Upload.ResumableUpload<Google.Apis.Drive.v1.Data.File, Google.Apis.Drive.v1.Data.File> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _quotaUser;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Drive.v1.Data.File body) : 
                    base(service.BaseUri, "/upload/drive/v1/files", "POST") {
                this.Body = body;
                this.Authenticator = service.Authenticator;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser {
                get {
                    return this._quotaUser;
                }
                set {
                    this._quotaUser = value;
                }
            }
        }
        
        public class PatchRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Drive.v1.Data.File> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _quotaUser;
            
            private string _id;
            
            private System.Nullable<bool> _newRevision;
            
            private System.Nullable<bool> _updateModifiedDate;
            
            private System.Nullable<bool> _updateViewedDate;
            
            private Google.Apis.Drive.v1.Data.File _Body;
            
            public PatchRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Drive.v1.Data.File body, string id) : 
                    base(service) {
                this.Body = body;
                this._id = id;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser {
                get {
                    return this._quotaUser;
                }
                set {
                    this._quotaUser = value;
                }
            }
            
            /// <summary>The id for the file in question.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id {
                get {
                    return this._id;
                }
            }
            
            /// <summary>Whether a blob upload should create a new revision. If not set or false, the blob data in the current head revision will be replaced.</summary>
            [Google.Apis.Util.RequestParameterAttribute("newRevision", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> NewRevision {
                get {
                    return this._newRevision;
                }
                set {
                    this._newRevision = value;
                }
            }
            
            /// <summary>Controls updating the modified date of the file. If true, the modified date will be updated to the current time, regardless of whether other changes are being made. If false, the modified date will only be updated to the current time if other changes are also being made (changing the title, for example).</summary>
            [Google.Apis.Util.RequestParameterAttribute("updateModifiedDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> UpdateModifiedDate {
                get {
                    return this._updateModifiedDate;
                }
                set {
                    this._updateModifiedDate = value;
                }
            }
            
            /// <summary>Whether to update the view date after successfully updating the file.</summary>
            [Google.Apis.Util.RequestParameterAttribute("updateViewedDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> UpdateViewedDate {
                get {
                    return this._updateViewedDate;
                }
                set {
                    this._updateViewedDate = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Drive.v1.Data.File Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "files";
                }
            }
            
            protected override string MethodName {
                get {
                    return "patch";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class UpdateRequest : Google.Apis.Upload.ResumableUpload<Google.Apis.Drive.v1.Data.File, Google.Apis.Drive.v1.Data.File> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _quotaUser;
            
            private string _id;
            
            private System.Nullable<bool> _newRevision;
            
            private System.Nullable<bool> _updateModifiedDate;
            
            private System.Nullable<bool> _updateViewedDate;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Drive.v1.Data.File body, string id) : 
                    base(service.BaseUri, "/upload/drive/v1/files/{id}", "PUT") {
                this.Body = body;
                this.Authenticator = service.Authenticator;
                this._id = id;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser {
                get {
                    return this._quotaUser;
                }
                set {
                    this._quotaUser = value;
                }
            }
            
            /// <summary>The id for the file in question.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id {
                get {
                    return this._id;
                }
            }
            
            /// <summary>Whether a blob upload should create a new revision. If not set or false, the blob data in the current head revision will be replaced.</summary>
            [Google.Apis.Util.RequestParameterAttribute("newRevision", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> NewRevision {
                get {
                    return this._newRevision;
                }
                set {
                    this._newRevision = value;
                }
            }
            
            /// <summary>Controls updating the modified date of the file. If true, the modified date will be updated to the current time, regardless of whether other changes are being made. If false, the modified date will only be updated to the current time if other changes are also being made (changing the title, for example).</summary>
            [Google.Apis.Util.RequestParameterAttribute("updateModifiedDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> UpdateModifiedDate {
                get {
                    return this._updateModifiedDate;
                }
                set {
                    this._updateModifiedDate = value;
                }
            }
            
            /// <summary>Whether to update the view date after successfully updating the file.</summary>
            [Google.Apis.Util.RequestParameterAttribute("updateViewedDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> UpdateViewedDate {
                get {
                    return this._updateViewedDate;
                }
                set {
                    this._updateViewedDate = value;
                }
            }
        }
    }
    
    public partial class DriveService {
        
        private const string Resource = "";
        
        private FilesResource _files;
        
        private Google.Apis.Discovery.IRequestProvider service {
            get {
                return this;
            }
        }
        
        public virtual FilesResource Files {
            get {
                return this._files;
            }
        }
    }
}
