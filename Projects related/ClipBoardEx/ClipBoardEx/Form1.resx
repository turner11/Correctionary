<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="nfi.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="nfi.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABhYGIAAAAAAAYFBwBZWFoAuLe5AL++wACoqKgAkZCSAM/O0ACYl5kAsbCyAPj4+ADw8PAARURIAE5N
        TwDo5+kA4ODgAIGAggCPjpAAwcDCALi4uADGxcgAycjKAFJRUgChoKIAqKeoAODf4QBJSEoALi0vANnZ
        2gCenaAA19bYAJmZmQCtrLAAsK+wANHQ0QBwb3EAwL/BAOnp6gBzcnQA8PT6AOfm6ACvrrAAaWlqAPn2
        9QCura8A1tbWAKKhowCJiIoA0M/RAHl5egDIx8kAHRweAJCPkQBCQUIA397gAPv98QDw7/AA+Pb4AMjB
        zgDTzN8Aq6DSAPX6+QDv7vAA2NfZAGlyywDR3PsAUEeyAG5dygA/OrcAu7DkAFNUlACbn9sAoZLpALO1
        4QC1qOUASkrFANDU+ACuuc0AwMvxAEQ6qgCxpecAQDmzAI+Z3QDS3OkA5Or1AJaJ1ACzuOoAqZvsAJae
        3gBJTMAA7uv6AMbFxwCZmrkApqWpAM7OzgA5ODoAzs3PAFdXVwC3t7cAh4aIAFBPUQBeXV8AZmVnAIiH
        iQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAZwECAQIBAgEBAgEBAQECAQIBAQEBAQEBAQIBAQIBAQEbMSYzJiMLIAspDCMUDAwLCwsLJQsE
        HkAPCjcfJxAlAWYRExMhFBUWJgsmEyI6CwsLCwtnKRVoHhMiEwMTGT8BNhVeFBQEBRUOCwsWCigmCwsL
        C2UUIgchLwcZBTMTCwEOCgZAFQQjJRALCxQUORALCwsLYg8WPwYHNyAjBAsdAScQJiAdMzElCwsLFhYM
        HQsLCwsnECU6Jh0TCyYLFAsBJwsLCxQLJgsLCwsLCwsLCwsLCwQgCwsLCwsLCxYdCwErDzc5IxMLGgsm
        HQsQCwsLCwsQFgwUDAsmDAsxIyMmARsGMWQdFAsWEBETJkAiCwsLJjoXFAQQFjEZCyMgEyUBYgoUChML
        CzEKMhYLGDALCwsLCwMbJgsyEWMmIxYKLQFgGBMVBgsLFgowFgswDAsLCwwdFyBhCgcZHRAIMQkwARsd
        EwcKFAsxIBgdCxMdCwsLHRMMHSsYEBYxCxQgFh0BJwsLFhMLCxYKCyYLCwsLCwsLCwsLCwsLCwsLCwsL
        IwErCwsLBAsLCxQLCwsLCwsLCwsLCwsLCwsLCwsLCwsLAicLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCzgL
        CwsLCwwBNhQIIAQ1Cws4CwsLCwsLCyw6ODoLKAtdC14TC18GEwEDPyMlNxImQjpPUFFSU1RVVklXRVhZ
        WgtbGFwoFgYTARc/IwQvQAtBC0JDREVGRkdISUpFS0hMTU4AIAsJKzIBNjMlFBYRCws7OgsLCwsLCzw9
        CwsLCws+CwsLCwwFIwEACwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsmASQLMRALDBEjCwsLCwsL
        CwsLCwsLCwsLCwsLCwsLCwsBKzgLKDk5KR0LCwsLHToWCx0LCwsZFBAlFAYLDBQUBgEDBxQHERkLEQsL
        CzcaNCgMGwsLCzIjGSIGBBMLIxgGARcyGBMEGDMgEAsLDBA0CzU2CwsLERAGCgcHCwsjFRMBGwoKCC8g
        MDETCwsmFicmIxwMCwsnEA4lEwYKEAoTCgEXJi4QGAwQDAwLCxYKFhMLGAoLCxEUBhMLDBALIwodAScL
        CwsLCwsLCwsLDBAjCwsLCwsLCwwtCwsLCwsLBB0BKyYLDCYLDAsMCwsLIyYMCywmJgsLCwYfHSYLEB0d
        HQEXIwQWEyQlIyYLCwsYJwYoKSoeCwsLChgHEyIVIwQTARcGBBgABhkaGwsLCxQcAwsdHgcQCwsGHxEg
        ISAGIhQBAwQFBgcICQUKCwsMCg0ODxARBgsLCxITCRQVCQQKFgEAAQECAQEBAQEBAQEBAQECAQIBAQEB
        AQEBAQEBAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>